name: Rust

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Wix Toolset
        run: |
          Invoke-WebRequest -Uri "https://github.com/wixtoolset/wix3/releases/download/wix3112rtm/wix311-binaries.zip" -OutFile wix.zip
          Expand-Archive -Path wix.zip -DestinationPath wix
          echo "${{ github.workspace }}\wix" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: x86_64-pc-windows-msvc
          override: true

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build Release
        run: cargo build --release --target x86_64-pc-windows-msvc

      - name: Generate Installer
        run: |
          cargo install cargo-wix
          cargo wix init
          cargo wix --target x86_64-pc-windows-msvc

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Windows-Installer
          path: target/x86_64-pc-windows-msvc/wix/*.msi

  build-macos-arm:
    name: Build macOS ARM
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Rust (ARM)
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: aarch64-apple-darwin
          override: true

      - name: Install Dependencies
        run: |
          brew install cmake pkg-config

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build Universal Binary
        run: |
          cargo build --release --target aarch64-apple-darwin

      - name: Create DMG Package
        run: |
          mkdir -p XdUtil.app/Contents/MacOS
          cp target/aarch64-apple-darwin/release/xdutil XdUtil.app/Contents/MacOS/
          hdiutil create -volname "XdUtil" -srcfolder XdUtil.app -ov xdutil.dmg

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: macOS-ARM-App
          path: xdutil.dmg